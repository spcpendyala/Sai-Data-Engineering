import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Script generated for node AWS Glue Data Catalog
AWSGlueDataCatalog_node1732297759222 = glueContext.create_dynamic_frame.from_catalog(database="de-on-youtube-cleaned", table_name="raw_statistics", transformation_ctx="AWSGlueDataCatalog_node1732297759222")

# Script generated for node AWS Glue Data Catalog
AWSGlueDataCatalog_node1732297714501 = glueContext.create_dynamic_frame.from_catalog(database="de-on-youtube-cleaned", table_name="cleaned_statistics_reference_data", transformation_ctx="AWSGlueDataCatalog_node1732297714501")

# Script generated for node Join
Join_node1732297825551 = Join.apply(frame1=AWSGlueDataCatalog_node1732297759222, frame2=AWSGlueDataCatalog_node1732297714501, keys1=["category_id"], keys2=["id"], transformation_ctx="Join_node1732297825551")

# Script generated for node Amazon S3
AmazonS3_node1732297967952 = glueContext.getSink(path="s3://de-on-youtube-analytics-nv-us-east-1", connection_type="s3", updateBehavior="UPDATE_IN_DATABASE", partitionKeys=["region", "category_id"], enableUpdateCatalog=True, transformation_ctx="AmazonS3_node1732297967952")
AmazonS3_node1732297967952.setCatalogInfo(catalogDatabase="de-on-youtube-analytics",catalogTableName="analytics-report")
AmazonS3_node1732297967952.setFormat("glueparquet", compression="snappy")
AmazonS3_node1732297967952.writeFrame(Join_node1732297825551)
job.commit()
